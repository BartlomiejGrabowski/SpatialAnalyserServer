# Python stubs generated by omniidl from db_shp.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "DB"
#
__name__ = "DB"
_0_DB = omniORB.openModule("DB", r"db_shp.idl")
_0_DB__POA = omniORB.openModule("DB__POA", r"db_shp.idl")


# interface Shp
_0_DB._d_Shp = (omniORB.tcInternal.tv_objref, "IDL:DB/Shp:1.0", "Shp")
omniORB.typeMapping["IDL:DB/Shp:1.0"] = _0_DB._d_Shp
_0_DB.Shp = omniORB.newEmptyClass()
class Shp :
    _NP_RepositoryId = _0_DB._d_Shp[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_DB.Shp = Shp
_0_DB._tc_Shp = omniORB.tcInternal.createTypeCode(_0_DB._d_Shp)
omniORB.registerType(Shp._NP_RepositoryId, _0_DB._d_Shp, _0_DB._tc_Shp)

# Shp operations and attributes
Shp._d_getShp = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# Shp object reference
class _objref_Shp (CORBA.Object):
    _NP_RepositoryId = Shp._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getShp(self, *args):
        return _omnipy.invoke(self, "getShp", _0_DB.Shp._d_getShp, args)

    __methods__ = ["getShp"] + CORBA.Object.__methods__

omniORB.registerObjref(Shp._NP_RepositoryId, _objref_Shp)
_0_DB._objref_Shp = _objref_Shp
del Shp, _objref_Shp

# Shp skeleton
__name__ = "DB__POA"
class Shp (PortableServer.Servant):
    _NP_RepositoryId = _0_DB.Shp._NP_RepositoryId


    _omni_op_d = {"getShp": _0_DB.Shp._d_getShp}

Shp._omni_skeleton = Shp
_0_DB__POA.Shp = Shp
omniORB.registerSkeleton(Shp._NP_RepositoryId, Shp)
del Shp
__name__ = "DB"

#
# End of module "DB"
#
__name__ = "db_shp_idl"

_exported_modules = ( "DB", )

# The end.
